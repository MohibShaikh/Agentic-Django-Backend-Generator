[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "django-agentic-backend"
version = "1.0.0"
authors = [
    {name = "Django Agentic Team", email = "contact@django-agentic.com"},
]
description = "AI-powered Django REST API generator with smart feedback integration and vector database support"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = [
    "django", "rest-api", "code-generator", "ai", "openai", "anthropic",
    "backend", "crud", "erd", "database", "automation", "machine-learning",
    "vector-database", "feedback", "agentic", "intelligent"
]
dependencies = [
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "requests>=2.25.0",
    "python-dotenv>=0.19.0",
    "aiohttp>=3.8.0",
    "networkx>=2.6.0",
]

[project.optional-dependencies]
vector = [
    "chromadb>=0.4.0",
    "sentence-transformers>=2.2.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.0.0",
]
cloud-vector = [
    "weaviate-client>=3.15.0",
    "pinecone-client>=2.2.0",
    "qdrant-client>=1.6.0",
    "cohere>=4.21.0",
]
enterprise = [
    "psycopg2-binary>=2.9.0",
    "redis>=4.0.0",
    "celery>=5.3.0",
    "gunicorn>=21.2.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
all = [
    "chromadb>=0.4.0",
    "sentence-transformers>=2.2.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.0.0",
    "weaviate-client>=3.15.0",
    "pinecone-client>=2.2.0",
    "qdrant-client>=1.6.0",
    "cohere>=4.21.0",
    "psycopg2-binary>=2.9.0",
    "redis>=4.0.0",
    "celery>=5.3.0",
    "gunicorn>=21.2.0",
]

[project.urls]
Homepage = "https://github.com/MohibShaikh/Agentic-Django-Backend-Generator"
Documentation = "https://github.com/MohibShaikh/Agentic-Django-Backend-Generator/blob/main/README.md"
Repository = "https://github.com/MohibShaikh/Agentic-Django-Backend-Generator"
"Bug Tracker" = "https://github.com/MohibShaikh/Agentic-Django-Backend-Generator/issues"

[project.scripts]
django-agentic = "django_agentic_backend.cli:main"
dab = "django_agentic_backend.cli:main"

[tool.setuptools.packages.find]
include = ["django_agentic_backend*"]

[tool.setuptools.package-data]
django_agentic_backend = [
    "templates/*.py",
    "templates/*.json", 
    "examples/*.json",
    "examples/*.py",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
asyncio_mode = "auto" 